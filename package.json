{
    "name": "karate-runner",
    "displayName": "Karate Runner",
    "description": "Open/Run/Debug Karate Tests and Build Reports by leveraging Codelens, Activity Bar, Debugger and much more.",
    "icon": "resources/karate.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/kirksl/karate-runner"
    },
    "version": "0.9.5-fork",
    "license": "MIT",
    "author": {
        "name": "Kirk Slota"
    },
    "publisher": "kirkslota",
    "engines": {
        "vscode": "^1.44.0"
    },
    "categories": [
        "Other"
    ],
    "keywords": [
        "karate",
        "intuit",
        "rest",
        "api",
        "gatling"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./out/extension",
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "karate-runner",
                    "title": "Karate Runner",
                    "icon": "resources/karate-activitybar.svg"
                }
            ]
        },
        "views": {
            "karate-runner": [
                {
                    "id": "karate-reports",
                    "name": "Build Reports"
                },
                {
                    "id": "karate-tests",
                    "name": "Tests"
                },
                {
                    "id": "karate-network-logs",
                    "name": "Karate Network Logs"
                },
                {
                    "id": "karate-executions",
                    "name": "Karate Executions"
                }
            ]
        },
        "commands": [
            {
                "command": "karateRunner.paste",
                "title": "Karate Smart Paste"
            },
            {
                "command": "karateRunner.getDebugFile",
                "title": "Get File To Debug"
            },
            {
                "command": "karateRunner.getDebugBuildFile",
                "title": "Get Build File To Debug"
            },
            {
                "command": "karateRunner.tests.run",
                "title": "Run Karate Test"
            },
            {
                "command": "karateRunner.tests.debug",
                "title": "Debug Karate Test"
            },
            {
                "command": "karateRunner.karateCli.debugCommand",
                "title": "Returns processed 'karateRunner.karateCli.debugCommandTemplate' config"
            },
            {
                "command": "karateRunner.buildReports.open",
                "title": "Open Build Report"
            },
            {
                "command": "karateRunner.buildReports.refreshTree",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "karateRunner.karateExecutionsTree.clearTree",
                "title": "Clear",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "karateRunner.karateNetworkLogs.clearTree",
                "title": "Clear",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "karateRunner.karateNetworkLogs.showScenarios.true",
                "title": "Show Scenarios",
                "icon": {
                    "light": "resources/light/display-deep.svg",
                    "dark": "resources/dark/display-deep.svg"
                }
            },
            {
                "command": "karateRunner.karateNetworkLogs.showScenarios.false",
                "title": "Hide Scenarios",
                "icon": {
                    "light": "resources/light/display-shallow.svg",
                    "dark": "resources/dark/display-shallow.svg"
                }
            },
            {
                "command": "karateRunner.tests.refreshTree",
                "title": "Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "karateRunner.tests.open",
                "title": "Open In Editor",
                "icon": {
                    "light": "resources/light/open-file.svg",
                    "dark": "resources/dark/open-file.svg"
                }
            },
            {
                "command": "karateRunner.tests.runAll",
                "title": "Run All Tests",
                "icon": {
                    "light": "resources/light/run-all-2.svg",
                    "dark": "resources/dark/run-all-2.svg"
                }
            },
            {
                "command": "karateRunner.tests.debugAll",
                "title": "Debug All Tests",
                "icon": {
                    "light": "resources/light/debug-alt-small.svg",
                    "dark": "resources/dark/debug-alt-small.svg"
                }
            },
            {
                "command": "karateRunner.karateExecutionsTree.relaunchLast",
                "title": "Relaunch Last Karate Debug Execution",
                "icon": {
                    "light": "resources/light/run-all.svg",
                    "dark": "resources/dark/run-all.svg"
                }
            },
            {
                "command": "karateRunner.karateExecutionsTree.launch",
                "title": "Debug this Execution",
                "icon": {
                    "light": "resources/light/run-all.svg",
                    "dark": "resources/dark/run-all.svg"
                }
            },
            {
                "command": "karateRunner.buildReports.displayShallow",
                "title": "Display Shallow",
                "icon": {
                    "light": "resources/light/display-deep.svg",
                    "dark": "resources/dark/display-deep.svg"
                }
            },
            {
                "command": "karateRunner.buildReports.displayDeep",
                "title": "Display Deep",
                "icon": {
                    "light": "resources/light/display-shallow.svg",
                    "dark": "resources/dark/display-shallow.svg"
                }
            },
            {
                "command": "karateRunner.tests.displayShallow",
                "title": "Display Shallow",
                "icon": {
                    "light": "resources/light/display-deep.svg",
                    "dark": "resources/dark/display-deep.svg"
                }
            },
            {
                "command": "karateRunner.tests.displayDeep",
                "title": "Display Deep",
                "icon": {
                    "light": "resources/light/display-shallow.svg",
                    "dark": "resources/dark/display-shallow.svg"
                }
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "karateRunner.buildReports.refreshTree",
                    "when": "view == karate-reports",
                    "group": "navigation@1"
                },
                {
                    "command": "karateRunner.tests.refreshTree",
                    "when": "view == karate-tests",
                    "group": "navigation@1"
                },
                {
                    "command": "karateRunner.buildReports.displayShallow",
                    "when": "view == karate-reports && config.karateRunner.buildReports.activityBarDisplayType == Deep",
                    "group": "navigation@2"
                },
                {
                    "command": "karateRunner.buildReports.displayDeep",
                    "when": "view == karate-reports && config.karateRunner.buildReports.activityBarDisplayType == Shallow",
                    "group": "navigation@2"
                },
                {
                    "command": "karateRunner.tests.displayShallow",
                    "when": "view == karate-tests && config.karateRunner.tests.activityBarDisplayType == Deep",
                    "group": "navigation@2"
                },
                {
                    "command": "karateRunner.tests.displayDeep",
                    "when": "view == karate-tests && config.karateRunner.tests.activityBarDisplayType == Shallow",
                    "group": "navigation@2"
                },
                {
                    "command": "karateRunner.karateNetworkLogs.clearTree",
                    "when": "view == karate-network-logs",
                    "group": "navigation"
                },
                {
                    "command": "karateRunner.karateNetworkLogs.showScenarios.true",
                    "when": "view == karate-network-logs",
                    "group": "navigation"
                },
                {
                    "command": "karateRunner.karateNetworkLogs.showScenarios.false",
                    "when": "view == karate-network-logs",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "karateRunner.tests.debugAll",
                    "when": "view == karate-tests && viewItem =~ /^testFile$|^test$/",
                    "group": "inline@1"
                },
                {
                    "command": "karateRunner.tests.runAll",
                    "when": "view == karate-tests && viewItem =~ /^testFile$|^test$/",
                    "group": "inline@2"
                },
                {
                    "command": "karateRunner.tests.open",
                    "when": "view == karate-tests && viewItem =~ /^testFile$|^file$/",
                    "group": "inline@3"
                },
                {
                    "command": "karateRunner.tests.runAll",
                    "when": "view == karate-tests && viewItem == testDirectory",
                    "group": "inline"
                },
                {
                    "command": "karateRunner.tests.debugAll",
                    "when": "view == karate-tests && viewItem == testDirectory",
                    "group": "inline"
                },
                {
                    "command": "karateRunner.karateExecutionsTree.launch",
                    "when": "view == karate-executions",
                    "group": "inline"
                },
                {
                    "command": "karateRunner.tests.open",
                    "when": "view == karate-executions && viewItem == testFile",
                    "group": "inline"
                },
                {
                    "command": "karateRunner.karateExecutionsTree.relaunchLast",
                    "when": "view == karate-executions",
                    "group": "navigation@1"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "Karate Runner",
            "properties": {
                "karateRunner.multimodule.rootModuleMarkerFile": {
                    "type": "string",
                    "default": "",
                    "description": "When using a multimodule project this file will be used to set the root of each module (i.e: pom.xml, build.gradle, karate.jar... ",
                    "scope": "resource"
                },
                "karateRunner.karateCli.karateOptions": {
                    "type": "string",
                    "default": "-H com.intuit.karate.cli.VSCodeHook",
                    "description": "Karate Options to be set in command templates, for e.g. '-t ~@ignore -T 5'. It must include '-H com.intuit.karate.cli.VSCodeHook' or equivalent hook",
                    "scope": "resource"
                },
                "karateRunner.karateCli.karateEnv": {
                    "type": "string",
                    "default": "local",
                    "description": "karate.env system property value to be set in command templates",
                    "scope": "resource"
                },
                "karateRunner.karateCli.classpath": {
                    "type": "string",
                    "default": "target/classes;target/test-classes;src/test/resources;karate.jar",
                    "description": "Classpath expression to be set in command line templates.",
                    "scope": "resource"
                },
                "karateRunner.karateCli.runCommandTemplate": {
                    "type": "string",
                    "default": "java '-Dkarate.env=${karateEnv}' '-Dvscode.port=${vscodePort}' -cp '${classpath}' com.intuit.karate.Main ${karateOptions} '${feature}'",
                    "description": "Command line template for run action. Karate Runner will handle setting the command line with the feature file being tested and suffixing the feature file with a ':number' when running individual Scenarios.",
                    "scope": "resource"
                },
                "karateRunner.karateCli.debugCommandTemplate": {
                    "type": "string",
                    "default": "java '-Dkarate.env=${karateEnv}' '-Dvscode.port=${vscodePort}' -cp '${classpath}' com.intuit.karate.Main -d",
                    "description": "Command line template for debug action. Karate Runner will handle setting 'karate options' and the command line with the feature file being tested and suffixing the feature file with a ':number' when running individual Scenarios.",
                    "scope": "resource"
                },
                "karateRunner.buildReports.openAfterEachRun": {
                    "type": "boolean",
                    "default": false,
                    "description": "Open reports in default program after running Karate tests.",
                    "scope": "resource"
                },
                "karateRunner.buildReports.toTarget": {
                    "type": "string",
                    "default": "**/{jacoco/test/html/index,cucumber-html-reports/overview-features,surefire-reports/timeline}.htm*",
                    "description": "Display reports targeted by glob pattern within Activity Bar.",
                    "scope": "resource"
                },
                "karateRunner.buildReports.activityBarDisplayType": {
                    "type": "string",
                    "default": "Shallow",
                    "enum": [
                        "Shallow",
                        "Deep"
                    ],
                    "description": "Display reports as a flat list (Shallow) or natural directory structure (Deep) within Activity Bar.",
                    "scope": "resource"
                },
                "karateRunner.debugger.serverPortTimeout": {
                    "type": "number",
                    "default": 60,
                    "description": "Default time (seconds) to wait for debug server to start.",
                    "scope": "resource"
                },
                "karateRunner.executionHistory.limit": {
                    "type": "number",
                    "default": 50,
                    "description": "Maximum number of executions to store and re-execute from Karate status bar.",
                    "scope": "resource"
                },
                "karateRunner.tests.toTarget": {
                    "type": "string",
                    "default": "**/src/test/**/*.feature",
                    "description": "Display Karate tests targeted by glob pattern within Activity Bar.",
                    "scope": "resource"
                },
                "karateRunner.tests.activityBarDisplayType": {
                    "type": "string",
                    "default": "Shallow",
                    "enum": [
                        "Shallow",
                        "Deep"
                    ],
                    "description": "Display Karate tests as a flat list (Shallow) or natural directory structure (Deep) within Activity Bar.",
                    "scope": "resource"
                },
                "karateRunner.eventLogsServer.port": {
                    "type": "number",
                    "default": 0,
                    "description": "Events Log Server Port ('0' means disabled).",
                    "scope": "resource"
                }
            }
        },
        "breakpoints": [
            {
                "language": "karate"
            }
        ],
        "debuggers": [
            {
                "type": "karate",
                "label": "Karate (debug)",
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "karateOptions",
                            "karateCli"
                        ],
                        "properties": {
                            "feature": {
                                "type": "string",
                                "description": "[feature]\n\nUsed by Karate Debug Server if [karateOptions] property not specified.",
                                "default": "^\"\\${command:karateRunner.getDebugFile}\""
                            },
                            "karateOptions": {
                                "type": "string",
                                "description": "[karateOptions]\n\nThis property is used only by Karate Debug Server.\nOverrides [feature] property to enable advanced debugging and specifying all Karate Options(classpath, threads, tags, hooks).\n Should contain '-H com.intuit.karate.cli.VSCodeHook' or compatible hook for this extension to fully work",
                                "default": "-H com.intuit.karate.cli.VSCodeHook ${command:karateRunner.getDebugFile}"
                            },
                            "karateCli": {
                                "type": "string",
                                "description": "[karateCli]\n\nThis property specifies the command to start Karate Debug Server.",
                                "default": "${config:karateRunner.karateJar.commandLineArgs} -d"
                            },
                            "debugPreStep": {
                                "type": "string",
                                "description": "[debugPreStep]\n\nThis property specifies the command Karate Debug Server should run before resuming execution of the debug session.\nTypically used by Karate-Robot to switch focus to the application under test.",
                                "default": "input(Key.ALT + Key.TAB)"
                            }
                        }
                    }
                }
            }
        ],
        "keybindings": [
            {
                "command": "karateRunner.paste",
                "key": "Ctrl+V",
                "linux": "Ctrl+Shift+V",
                "mac": "Cmd+V",
                "when": "editorTextFocus"
            },
            {
                "command": "karateRunner.tests.run",
                "args": null,
                "key": "Ctrl+R Ctrl+1",
                "linux": "Ctrl+Shift+R Ctrl+Shift+1",
                "mac": "Cmd+R Cmd+1",
                "when": "editorTextFocus && editorLangId == karate"
            },
            {
                "command": "karateRunner.tests.runAll",
                "args": null,
                "key": "Ctrl+R Ctrl+A",
                "linux": "Ctrl+Shift+R Ctrl+Shift+A",
                "mac": "Cmd+R Cmd+A",
                "when": "editorTextFocus && editorLangId == karate"
            }
        ],
        "languages": [
            {
                "id": "karate",
                "aliases": [
                    "Karate",
                    "karate"
                ],
                "extensions": [
                    ".feature"
                ],
                "configuration": "./karate-language-configuration.json"
            },
            {
                "id": "karate-json",
                "configuration": "./karate-json-language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "karate",
                "scopeName": "source.karate",
                "path": "./syntaxes/karate.tmLanguage.json",
                "embeddedLanguages": {
                    "meta.embedded.block.javascript": "javascript",
                    "meta.embedded.block.json": "karate-json",
                    "meta.embedded.block.xml": "xml"
                }
            },
            {
                "language": "karate-json",
                "scopeName": "source.json.karate",
                "path": "./syntaxes/karate-json.tmLanguage.json"
            },
            {
                "scopeName": "source.js.karate",
                "path": "./syntaxes/karate-js.tmLanguage.json",
                "injectTo": [
                    "source.js",
                    "source.karate"
                ]
            }
        ]
    },
    "scripts": {
        "prettier:format": "prettier --write \"{,src/**/,test/**}*.{js,ts}\"",
        "lint": "tslint --project tsconfig.json -e 'node_modules/**'",
        "lint:fix": "npm run lint -- --fix",
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.6.9",
        "@types/vscode": "^1.44.0",
        "glob": "^7.1.4",
        "js-yaml": "^3.13.1",
        "mocha": "^7.1.2",
        "prettier": "^2.2.1",
        "tslint": "^6.1.2",
        "typescript": "3.5.3",
        "vscode-test": "^1.1.0"
    },
    "dependencies": {
        "fs-extra": "^8.1.0",
        "mkdirp": "^1.0.4",
        "parse-curl": "0.2.6",
        "rimraf": "^2.6.3"
    }
}
